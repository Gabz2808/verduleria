--------------------------------------------------------
--  File created - Friday-March-14-2025   
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table ALERTAS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."ALERTAS" 
   (	"ID_ALERTA" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"TIPO" VARCHAR2(100 BYTE), 
	"MENSAJE" VARCHAR2(255 BYTE), 
	"FECHA" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CALIDAD
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."CALIDAD" 
   (	"ID_CALIDAD" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"DESCRIPCION" VARCHAR2(255 BYTE), 
	"ID_PRODUCTO" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CATEGORIAS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."CATEGORIAS" 
   (	"ID_CATEGORIA" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"NOMBRE" VARCHAR2(100 BYTE), 
	"DESCRIPCION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table CLIENTES
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."CLIENTES" 
   (	"ID_CLIENTE" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"NOMBRE" VARCHAR2(150 BYTE), 
	"CONTACTO" VARCHAR2(100 BYTE), 
	"DIRECCION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table COMPRAS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."COMPRAS" 
   (	"ID_COMPRA" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ID_PROVEEDOR" NUMBER, 
	"FECHA_COMPRA" DATE DEFAULT SYSDATE, 
	"TOTAL" NUMBER(10,2)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DETALLE_COMPRAS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."DETALLE_COMPRAS" 
   (	"ID_DETALLE_COMPRA" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ID_COMPRA" NUMBER, 
	"ID_PRODUCTO" NUMBER, 
	"CANTIDAD" NUMBER, 
	"PRECIO_UNITARIO" NUMBER(10,2)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DETALLE_VENTAS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."DETALLE_VENTAS" 
   (	"ID_DETALLE_VENTA" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ID_VENTA" NUMBER, 
	"ID_PRODUCTO" NUMBER, 
	"CANTIDAD" NUMBER, 
	"PRECIO_UNITARIO" NUMBER(10,2)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table DEVOLUCIONES
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."DEVOLUCIONES" 
   (	"ID_DEVOLUCION" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ID_PRODUCTO" NUMBER, 
	"ID_ORDEN" NUMBER, 
	"ID_CLIENTE" NUMBER, 
	"MOTIVO" VARCHAR2(255 BYTE), 
	"CANTIDAD" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table GASTOS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."GASTOS" 
   (	"ID_GASTO" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"DESCRIPCION" VARCHAR2(255 BYTE), 
	"MONTO" NUMBER(10,2), 
	"FECHA" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HISTORIAL_PRECIOS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."HISTORIAL_PRECIOS" 
   (	"ID_HISTORIAL" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ID_PRODUCTO" NUMBER, 
	"PRECIO_ANTERIOR" NUMBER(10,2), 
	"PRECIO_NUEVO" NUMBER(10,2), 
	"FECHA_CAMBIO" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table HISTORIAL_STOCK
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."HISTORIAL_STOCK" 
   (	"ID_HISTORIAL" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ID_PRODUCTO" NUMBER, 
	"CANTIDAD_ANTERIOR" NUMBER, 
	"CANTIDAD_NUEVA" NUMBER, 
	"FECHA_CAMBIO" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table INVENTARIO
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."INVENTARIO" 
   (	"ID_INVENTARIO" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ID_PRODUCTO" NUMBER, 
	"STOCK" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table LOGS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."LOGS" 
   (	"ID_LOG" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ID_USUARIO" NUMBER, 
	"ACCION" VARCHAR2(255 BYTE), 
	"FECHA" DATE DEFAULT SYSDATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PAGOS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."PAGOS" 
   (	"ID_PAGO" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ID_VENTA" NUMBER, 
	"METODO_PAGO" VARCHAR2(50 BYTE), 
	"MONTO" NUMBER(10,2)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PRODUCTOS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."PRODUCTOS" 
   (	"ID_PRODUCTO" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"NOMBRE" VARCHAR2(100 BYTE), 
	"ID_CATEGORIA" NUMBER, 
	"ID_UNIDAD" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PROMOCIONES
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."PROMOCIONES" 
   (	"ID_PROMOCION" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ID_PRODUCTO" NUMBER, 
	"DESCUENTO" NUMBER(5,2), 
	"FECHA_INICIO" DATE, 
	"FECHA_FIN" DATE
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table PROVEEDORES
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."PROVEEDORES" 
   (	"ID_PROVEEDOR" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"NOMBRE" VARCHAR2(150 BYTE), 
	"CONTACTO" VARCHAR2(100 BYTE), 
	"DIRECCION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table REPORTES
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."REPORTES" 
   (	"ID_REPORTE" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"TIPO" VARCHAR2(100 BYTE), 
	"FECHA_GENERADO" DATE DEFAULT SYSDATE, 
	"DESCRIPCION" VARCHAR2(255 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table ROLES
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."ROLES" 
   (	"ID_ROL" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"NOMBRE" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION IMMEDIATE 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  STORAGE(INITIAL 65536 NEXT 1048576 MINEXTENTS 1 MAXEXTENTS 2147483645
  PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
  BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table UNIDADES
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."UNIDADES" 
   (	"ID_UNIDAD" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"NOMBRE" VARCHAR2(50 BYTE)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table USUARIOS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."USUARIOS" 
   (	"ID_USUARIO" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"NOMBRE" VARCHAR2(100 BYTE), 
	"CORREO" VARCHAR2(100 BYTE), 
	"CONTRASEÑA" VARCHAR2(255 BYTE), 
	"ID_ROL" NUMBER
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
--------------------------------------------------------
--  DDL for Table VENTAS
--------------------------------------------------------

  CREATE TABLE "USER_JAVA"."VENTAS" 
   (	"ID_VENTA" NUMBER GENERATED BY DEFAULT AS IDENTITY MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 START WITH 1 CACHE 20 NOORDER  NOCYCLE  NOKEEP  NOSCALE , 
	"ID_CLIENTE" NUMBER, 
	"FECHA_VENTA" DATE DEFAULT SYSDATE, 
	"TOTAL" NUMBER(10,2)
   ) SEGMENT CREATION DEFERRED 
  PCTFREE 10 PCTUSED 40 INITRANS 1 MAXTRANS 255 
 NOCOMPRESS LOGGING
  TABLESPACE "USERS" ;
REM INSERTING into USER_JAVA.ALERTAS
SET DEFINE OFF;
REM INSERTING into USER_JAVA.CALIDAD
SET DEFINE OFF;
REM INSERTING into USER_JAVA.CATEGORIAS
SET DEFINE OFF;
REM INSERTING into USER_JAVA.CLIENTES
SET DEFINE OFF;
REM INSERTING into USER_JAVA.COMPRAS
SET DEFINE OFF;
REM INSERTING into USER_JAVA.DETALLE_COMPRAS
SET DEFINE OFF;
REM INSERTING into USER_JAVA.DETALLE_VENTAS
SET DEFINE OFF;
REM INSERTING into USER_JAVA.DEVOLUCIONES
SET DEFINE OFF;
REM INSERTING into USER_JAVA.GASTOS
SET DEFINE OFF;
REM INSERTING into USER_JAVA.HISTORIAL_PRECIOS
SET DEFINE OFF;
REM INSERTING into USER_JAVA.HISTORIAL_STOCK
SET DEFINE OFF;
REM INSERTING into USER_JAVA.INVENTARIO
SET DEFINE OFF;
REM INSERTING into USER_JAVA.LOGS
SET DEFINE OFF;
REM INSERTING into USER_JAVA.PAGOS
SET DEFINE OFF;
REM INSERTING into USER_JAVA.PRODUCTOS
SET DEFINE OFF;
REM INSERTING into USER_JAVA.PROMOCIONES
SET DEFINE OFF;
REM INSERTING into USER_JAVA.PROVEEDORES
SET DEFINE OFF;
REM INSERTING into USER_JAVA.REPORTES
SET DEFINE OFF;
REM INSERTING into USER_JAVA.ROLES
SET DEFINE OFF;
Insert into USER_JAVA.ROLES (ID_ROL,NOMBRE) values (2,'ADMIN');
Insert into USER_JAVA.ROLES (ID_ROL,NOMBRE) values (1,'USER');
REM INSERTING into USER_JAVA.UNIDADES
SET DEFINE OFF;
REM INSERTING into USER_JAVA.USUARIOS
SET DEFINE OFF;
REM INSERTING into USER_JAVA.VENTAS
SET DEFINE OFF;
--------------------------------------------------------
--  DDL for Procedure CREAR_ALERTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_ALERTA" (
    p_tipo IN VARCHAR2,
    p_mensaje IN VARCHAR2
) AS
BEGIN
    INSERT INTO Alertas (tipo, mensaje, fecha) VALUES (p_tipo, p_mensaje, SYSDATE);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_CALIDAD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_CALIDAD" (
    descripcion in VARCHAR,
    id_producto in number
)
AS

BEGIN

    insert into calidad(descripcion, id_producto)
    values (descripcion,id_producto);

END crear_calidad;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_CATEGORIA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_CATEGORIA" (
    Nombre in VARCHAR
)
AS

BEGIN

    insert into categorias(nombre)
    values (nombre);

END crear_categoria;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_CLIENTE" (
    p_nombre IN VARCHAR2,
    p_contacto IN VARCHAR2,
    p_direccion IN VARCHAR2
) AS
BEGIN
    INSERT INTO Clientes (nombre, contacto, direccion) VALUES (p_nombre, p_contacto, p_direccion);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_COMPRA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_COMPRA" (
    p_id_proveedor IN NUMBER,
    p_total IN NUMBER
) AS
BEGIN
    INSERT INTO Compras (id_proveedor, fecha_compra, total) VALUES (p_id_proveedor, SYSDATE, p_total);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_DETALLE_COMPRA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_DETALLE_COMPRA" (
    p_id_compra IN NUMBER,
    p_id_producto IN NUMBER,
    p_cantidad IN NUMBER,
    p_precio_unitario IN NUMBER
) AS
BEGIN
    INSERT INTO "USER_JAVA"."DETALLE_COMPRAS" 
    ("ID_COMPRA", "ID_PRODUCTO", "CANTIDAD", "PRECIO_UNITARIO")
    VALUES (p_id_compra, p_id_producto, p_cantidad, p_precio_unitario);

    COMMIT;
END crear_detalle_compra;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_DETALLE_VENTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_DETALLE_VENTA" (
    p_id_venta IN NUMBER,
    p_id_producto IN NUMBER,
    p_cantidad IN NUMBER,
    p_precio_unitario IN NUMBER
) AS
BEGIN
    INSERT INTO "USER_JAVA"."DETALLE_VENTAS" 
    ("ID_VENTA", "ID_PRODUCTO", "CANTIDAD", "PRECIO_UNITARIO")
    VALUES (p_id_venta, p_id_producto, p_cantidad, p_precio_unitario);

    COMMIT;
END crear_detalle_venta;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_DEVOLUCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_DEVOLUCION" (
    p_id_producto IN NUMBER,
    p_id_cliente IN NUMBER,
    p_id_orden IN NUMBER,
    p_motivo IN VARCHAR2,
    p_cantidad IN NUMBER
) AS
BEGIN
    INSERT INTO Devoluciones (id_producto, id_orden, id_cliente, motivo, cantidad) 
    VALUES (p_id_producto, p_id_orden, p_id_cliente, p_motivo, p_cantidad);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_GASTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_GASTO" (
    p_descripcion IN VARCHAR2,
    p_monto IN NUMBER,
    p_fecha IN DATE DEFAULT SYSDATE
) AS
BEGIN
    INSERT INTO "USER_JAVA"."GASTOS" 
    ("DESCRIPCION", "MONTO", "FECHA")
    VALUES (p_descripcion, p_monto, p_fecha);

    COMMIT;
END crear_gasto;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_HISTORIAL_PRECIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_HISTORIAL_PRECIO" (
    p_id_producto IN NUMBER,
    p_precio_anterior IN NUMBER,
    p_precio_nuevo IN NUMBER,
    p_fecha_cambio IN DATE DEFAULT SYSDATE
) AS
BEGIN
    INSERT INTO "USER_JAVA"."HISTORIAL_PRECIOS" 
    ("ID_PRODUCTO", "PRECIO_ANTERIOR", "PRECIO_NUEVO", "FECHA_CAMBIO")
    VALUES (p_id_producto, p_precio_anterior, p_precio_nuevo, p_fecha_cambio);

    COMMIT;
END crear_historial_precio;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_HISTORIAL_STOCK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_HISTORIAL_STOCK" (
    p_id_producto IN NUMBER,
    p_cantidad_anterior IN NUMBER,
    p_cantidad_nueva IN NUMBER
) AS
BEGIN
    INSERT INTO Historial_Stock (id_producto, cantidad_anterior, cantidad_nueva, fecha_cambio) 
    VALUES (p_id_producto, p_cantidad_anterior, p_cantidad_nueva, SYSDATE);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_INVENTARIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_INVENTARIO" (
    p_id_producto IN NUMBER,
    p_stock IN NUMBER
) AS
BEGIN
    INSERT INTO "USER_JAVA"."INVENTARIO" 
    ("ID_PRODUCTO", "STOCK")
    VALUES (p_id_producto, p_stock);

    COMMIT;
END crear_inventario;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_LOG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_LOG" (
    p_id_usuario IN NUMBER,
    p_accion IN VARCHAR2,
    p_fecha IN DATE DEFAULT SYSDATE
) AS
BEGIN
    INSERT INTO "USER_JAVA"."LOGS" 
    ("ID_USUARIO", "ACCION", "FECHA")
    VALUES (p_id_usuario, p_accion, p_fecha);

    COMMIT;
END crear_log;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_PAGO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_PAGO" (
    p_id_venta IN NUMBER,
    p_metodo_pago IN VARCHAR2,
    p_monto IN NUMBER
) AS
BEGIN
    INSERT INTO "USER_JAVA"."PAGOS" 
    ("ID_VENTA", "METODO_PAGO", "MONTO")
    VALUES (p_id_venta, p_metodo_pago, p_monto);

    COMMIT;
END crear_pago;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_PRODUCTO" (
    nombre VARCHAR2,
    categoria_id NUMBER,
    unidad number
) AS
BEGIN
    INSERT INTO Productos (nombre, id_categoria, id_unidad)
    VALUES (nombre, categoria_id, unidad);
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN
        ROLLBACK;
        RAISE;
END;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_PROMOCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_PROMOCION" (
    p_id_producto IN NUMBER,
    p_descuento IN NUMBER,
    p_fecha_inicio IN DATE,
    p_fecha_fin IN DATE
) AS
BEGIN
    INSERT INTO "USER_JAVA"."PROMOCIONES" 
    ("ID_PRODUCTO", "DESCUENTO", "FECHA_INICIO", "FECHA_FIN")
    VALUES (p_id_producto, p_descuento, p_fecha_inicio, p_fecha_fin);

    COMMIT;
END crear_promocion;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_PROVEEDOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_PROVEEDOR" (
    p_nombre IN VARCHAR2,
    p_contacto IN VARCHAR2,
    p_direccion IN VARCHAR2
) AS
BEGIN
    INSERT INTO Proveedores (nombre, contacto, direccion) VALUES (p_nombre, p_contacto, p_direccion);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_REPORTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_REPORTE" (
    p_tipo IN VARCHAR2,
    p_descripcion IN VARCHAR2
) AS
BEGIN
    INSERT INTO "USER_JAVA"."REPORTES" 
    ("TIPO", "FECHA_GENERADO", "DESCRIPCION")
    VALUES (p_tipo, SYSDATE, p_descripcion);

    COMMIT;
END crear_reporte;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_ROL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_ROL" (
    p_nombre IN VARCHAR2
) AS
BEGIN
    INSERT INTO "USER_JAVA"."ROLES" ("NOMBRE")
    VALUES (p_nombre);

    COMMIT;
END crear_rol;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_UNIDAD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_UNIDAD" (
    p_nombre IN VARCHAR2
) AS
BEGIN
    INSERT INTO "USER_JAVA"."UNIDADES" ("NOMBRE")
    VALUES (p_nombre);

    COMMIT;
END crear_unidad;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_USUARIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_USUARIO" (
    p_nombre IN VARCHAR2,
    p_correo IN VARCHAR2,
    p_contraseña IN VARCHAR2,
    p_id_rol IN NUMBER
) AS
BEGIN
    INSERT INTO "USER_JAVA"."USUARIOS" ("NOMBRE", "CORREO", "CONTRASEÑA", "ID_ROL")
    VALUES (p_nombre, p_correo, p_contraseña, p_id_rol);

    COMMIT;
END crear_usuario;

/
--------------------------------------------------------
--  DDL for Procedure CREAR_VENTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."CREAR_VENTA" (
    p_id_cliente IN NUMBER,
    p_total IN NUMBER
) AS
BEGIN
    INSERT INTO Ventas (id_cliente, fecha_venta, total) VALUES (p_id_cliente, SYSDATE, p_total);
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_ALERTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_ALERTA" (
    a_id      IN NUMBER,
    a_tipo    IN VARCHAR2,
    a_mensaje IN VARCHAR2
) IS
BEGIN
    UPDATE alertas
    SET
        tipo = a_tipo,
        mensaje = a_mensaje
    WHERE
        id_alerta = a_id;

    -- Verificar si se actualizó algún registro
    IF SQL%rowcount = 0 THEN
        RAISE no_data_found;
    END IF;
    dbms_output.put_line('Alerta con ID '
                         || a_id
                         || ' actualizada correctamente.');
EXCEPTION
    WHEN no_data_found THEN
        dbms_output.put_line('No se encontró la alerta con ID ' || a_id);
    WHEN OTHERS THEN
        dbms_output.put_line('Error: ' || sqlerrm);
END editar_alerta;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_CALIDAD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_CALIDAD" (
    c_id IN NUMBER,
    c_descripcion IN VARCHAR2,
    c_id_producto IN number
)
IS
BEGIN
    UPDATE calidad
    SET descripcion = c_descripcion, 
        id_producto = c_id_producto
    WHERE id_calidad = c_id;

    -- Verificar si se actualizó algún registro
    IF SQL%ROWCOUNT = 0 THEN
        RAISE NO_DATA_FOUND;
    END IF;

    DBMS_OUTPUT.PUT_LINE('Categoría con ID ' || c_id || ' actualizada correctamente.');

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró la categoría con ID ' || c_id);
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END editar_calidad;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_CATEGORIA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_CATEGORIA" (
    c_id IN NUMBER,
    c_nombre IN VARCHAR2,
    c_descripcion IN VARCHAR2
)
IS
BEGIN
    UPDATE categorias
    SET nombre = c_nombre, 
        descripcion = c_descripcion
    WHERE id_categoria = c_id;

    -- Verificar si se actualizó algún registro
    IF SQL%ROWCOUNT = 0 THEN
        RAISE NO_DATA_FOUND;
    END IF;

    DBMS_OUTPUT.PUT_LINE('Categoría con ID ' || c_id || ' actualizada correctamente.');

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró la categoría con ID ' || c_id);
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END editar_categoria;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_CLIENTE" (
    p_id_cliente IN NUMBER,
    p_nombre IN VARCHAR2,
    p_contacto IN VARCHAR2,
    p_direccion IN VARCHAR2
) AS
BEGIN
    UPDATE Clientes SET nombre = p_nombre, contacto = p_contacto, direccion = p_direccion WHERE id_cliente = p_id_cliente;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_COMPRA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_COMPRA" (
    p_id_compra IN NUMBER,
    p_id_proveedor IN NUMBER,
    p_total IN NUMBER
) AS
BEGIN
    UPDATE Compras SET id_proveedor = p_id_proveedor, total = p_total WHERE id_compra = p_id_compra;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_DETALLE_COMPRA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_DETALLE_COMPRA" (
    p_id_detalle_compra IN NUMBER,
    p_id_compra IN NUMBER,
    p_id_producto IN NUMBER,
    p_cantidad IN NUMBER,
    p_precio_unitario IN NUMBER
) AS
BEGIN
    UPDATE "USER_JAVA"."DETALLE_COMPRAS"
    SET 
        "ID_COMPRA" = p_id_compra, 
        "ID_PRODUCTO" = p_id_producto,
        "CANTIDAD" = p_cantidad,
        "PRECIO_UNITARIO" = p_precio_unitario
    WHERE "ID_DETALLE_COMPRA" = p_id_detalle_compra;

    COMMIT;
END editar_detalle_compra;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_DETALLE_VENTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_DETALLE_VENTA" (
    p_id_detalle_venta IN NUMBER,
    p_id_venta IN NUMBER,
    p_id_producto IN NUMBER,
    p_cantidad IN NUMBER,
    p_precio_unitario IN NUMBER
) AS
BEGIN
    UPDATE "USER_JAVA"."DETALLE_VENTAS"
    SET 
        "ID_VENTA" = p_id_venta, 
        "ID_PRODUCTO" = p_id_producto,
        "CANTIDAD" = p_cantidad,
        "PRECIO_UNITARIO" = p_precio_unitario
    WHERE "ID_DETALLE_VENTA" = p_id_detalle_venta;

    COMMIT;
END editar_detalle_venta;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_DEVOLUCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_DEVOLUCION" (
    p_id_devolucion IN NUMBER,
    p_id_producto IN NUMBER,
    p_id_orden IN NUMBER,
    p_id_cliente IN NUMBER,
    p_motivo IN VARCHAR2,
    p_cantidad IN NUMBER
) AS
BEGIN
    UPDATE "USER_JAVA"."DEVOLUCIONES"
    SET 
        "ID_PRODUCTO" = p_id_producto, 
        "ID_ORDEN" = p_id_orden,
        "ID_CLIENTE" = p_id_cliente,
        "MOTIVO" = p_motivo,
        "CANTIDAD" = p_cantidad
    WHERE "ID_DEVOLUCION" = p_id_devolucion;

    COMMIT;
END editar_devolucion;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_GASTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_GASTO" (
    p_id_gasto IN NUMBER,
    p_descripcion IN VARCHAR2,
    p_monto IN NUMBER,
    p_fecha IN DATE
) AS
BEGIN
    UPDATE "USER_JAVA"."GASTOS"
    SET 
        "DESCRIPCION" = p_descripcion, 
        "MONTO" = p_monto,
        "FECHA" = p_fecha
    WHERE "ID_GASTO" = p_id_gasto;

    COMMIT;
END editar_gasto;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_HISTORIAL_PRECIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_HISTORIAL_PRECIO" (
    p_id_historial IN NUMBER,
    p_id_producto IN NUMBER,
    p_precio_anterior IN NUMBER,
    p_precio_nuevo IN NUMBER,
    p_fecha_cambio IN DATE
) AS
BEGIN
    UPDATE "USER_JAVA"."HISTORIAL_PRECIOS"
    SET 
        "ID_PRODUCTO" = p_id_producto, 
        "PRECIO_ANTERIOR" = p_precio_anterior,
        "PRECIO_NUEVO" = p_precio_nuevo,
        "FECHA_CAMBIO" = p_fecha_cambio
    WHERE "ID_HISTORIAL" = p_id_historial;

    COMMIT;
END editar_historial_precio;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_HISTORIAL_STOCK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_HISTORIAL_STOCK" (
    p_id_historial IN NUMBER,
    p_id_producto IN NUMBER,
    p_cantidad_anterior IN NUMBER,
    p_cantidad_nueva IN NUMBER,
    p_fecha_cambio IN DATE
) AS
BEGIN
    UPDATE "USER_JAVA"."HISTORIAL_STOCK"
    SET 
        "ID_PRODUCTO" = p_id_producto, 
        "CANTIDAD_ANTERIOR" = p_cantidad_anterior,
        "CANTIDAD_NUEVA" = p_cantidad_nueva,
        "FECHA_CAMBIO" = p_fecha_cambio
    WHERE "ID_HISTORIAL" = p_id_historial;

    COMMIT;
END editar_historial_stock;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_INVENTARIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_INVENTARIO" (
    p_id_inventario IN NUMBER,
    p_id_producto IN NUMBER,
    p_stock IN NUMBER
) AS
BEGIN
    UPDATE "USER_JAVA"."INVENTARIO"
    SET 
        "ID_PRODUCTO" = p_id_producto, 
        "STOCK" = p_stock
    WHERE "ID_INVENTARIO" = p_id_inventario;

    COMMIT;
END editar_inventario;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_LOG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_LOG" (
    p_id_log IN NUMBER,
    p_id_usuario IN NUMBER,
    p_accion IN VARCHAR2,
    p_fecha IN DATE
) AS
BEGIN
    UPDATE "USER_JAVA"."LOGS"
    SET 
        "ID_USUARIO" = p_id_usuario, 
        "ACCION" = p_accion,
        "FECHA" = p_fecha
    WHERE "ID_LOG" = p_id_log;

    COMMIT;
END editar_log;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_PAGO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_PAGO" (
    p_id_pago IN NUMBER,
    p_id_venta IN NUMBER,
    p_metodo_pago IN VARCHAR2,
    p_monto IN NUMBER
) AS
BEGIN
    UPDATE "USER_JAVA"."PAGOS"
    SET 
        "ID_VENTA" = p_id_venta, 
        "METODO_PAGO" = p_metodo_pago,
        "MONTO" = p_monto
    WHERE "ID_PAGO" = p_id_pago;

    COMMIT;
END editar_pago;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_PRODUCTO" (
    p_id_producto IN NUMBER,
    p_nombre IN VARCHAR2,

    p_id_categoria IN NUMBER,
    p_id_unidad IN NUMBER
) AS
BEGIN
    UPDATE Productos 
    SET nombre = p_nombre, id_categoria = p_id_categoria, id_unidad = p_id_unidad
    WHERE id_producto = p_id_producto;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_PROMOCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_PROMOCION" (
    p_id_promocion IN NUMBER,
    p_id_producto IN NUMBER,
    p_descuento IN NUMBER,
    p_fecha_inicio IN DATE,
    p_fecha_fin IN DATE
) AS
BEGIN
    UPDATE "USER_JAVA"."PROMOCIONES"
    SET 
        "ID_PRODUCTO" = p_id_producto, 
        "DESCUENTO" = p_descuento,
        "FECHA_INICIO" = p_fecha_inicio,
        "FECHA_FIN" = p_fecha_fin
    WHERE "ID_PROMOCION" = p_id_promocion;

    COMMIT;
END editar_promocion;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_PROVEEDOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_PROVEEDOR" (
    p_id_proveedor IN NUMBER,
    p_nombre IN VARCHAR2,
    p_contacto IN VARCHAR2,
    p_direccion IN VARCHAR2
) AS
BEGIN
    UPDATE Proveedores SET nombre = p_nombre, contacto = p_contacto, direccion = p_direccion WHERE id_proveedor = p_id_proveedor;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_REPORTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_REPORTE" (
    p_id_reporte IN NUMBER,
    p_tipo IN VARCHAR2,
    p_descripcion IN VARCHAR2
) AS
BEGIN
    UPDATE "USER_JAVA"."REPORTES"
    SET "TIPO" = p_tipo, 
        "DESCRIPCION" = p_descripcion
    WHERE "ID_REPORTE" = p_id_reporte;

    COMMIT;
END editar_reporte;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_ROL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_ROL" (
    p_id_rol IN NUMBER,
    p_nombre IN VARCHAR2
) AS
BEGIN
    UPDATE "USER_JAVA"."ROLES"
    SET "NOMBRE" = p_nombre
    WHERE "ID_ROL" = p_id_rol;

    COMMIT;
END editar_rol;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_UNIDAD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_UNIDAD" (
    p_id_unidad IN NUMBER,
    p_nombre IN VARCHAR2
) AS
BEGIN
    UPDATE "USER_JAVA"."UNIDADES"
    SET "NOMBRE" = p_nombre
    WHERE "ID_UNIDAD" = p_id_unidad;

    COMMIT;
END editar_unidad;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_USUARIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_USUARIO" (
    p_id_usuario IN NUMBER,
    p_nombre IN VARCHAR2,
    p_correo IN VARCHAR2,
    p_contraseña IN VARCHAR2,
    p_id_rol IN NUMBER
) AS
BEGIN
    UPDATE "USER_JAVA"."USUARIOS"
    SET "NOMBRE" = p_nombre,
        "CORREO" = p_correo,
        "CONTRASEÑA" = p_contraseña,
        "ID_ROL" = p_id_rol
    WHERE "ID_USUARIO" = p_id_usuario;

    COMMIT;
END editar_usuario;

/
--------------------------------------------------------
--  DDL for Procedure EDITAR_VENTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."EDITAR_VENTA" (
    p_id_venta IN NUMBER,
    p_id_cliente IN NUMBER,
    p_total IN NUMBER
) AS
BEGIN
    UPDATE Ventas SET id_cliente = p_id_cliente, total = p_total WHERE id_venta = p_id_venta;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_ALERTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_ALERTA" (
    p_id_alerta IN NUMBER
) AS
BEGIN
    DELETE FROM alertas WHERE id_alerta = p_id_alerta;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_CALIDAD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_CALIDAD" (
    p_id_calidad IN NUMBER
) AS
BEGIN
    DELETE FROM calidad WHERE id_calidad = p_id_calidad;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_CATEGORIA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_CATEGORIA" (
    p_id_categoria IN NUMBER
) AS
BEGIN
    DELETE FROM Categorias WHERE id_categoria = p_id_categoria;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_CLIENTE" (
    p_id_cliente IN NUMBER
) AS
BEGIN
    DELETE FROM Clientes WHERE id_cliente = p_id_cliente;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_COMPRA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_COMPRA" (
    p_id_compra IN NUMBER
) AS
BEGIN
    DELETE FROM Compras WHERE id_compra = p_id_compra;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_DETALLE_COMPRA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_DETALLE_COMPRA" (
    p_id_detalle_compra IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."DETALLE_COMPRAS"
    WHERE "ID_DETALLE_COMPRA" = p_id_detalle_compra;

    COMMIT;
END eliminar_detalle_compra;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_DETALLE_VENTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_DETALLE_VENTA" (
    p_id_detalle_venta IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."DETALLE_VENTAS"
    WHERE "ID_DETALLE_VENTA" = p_id_detalle_venta;

    COMMIT;
END eliminar_detalle_venta;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_DEVOLUCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_DEVOLUCION" (
    p_id_devolucion IN NUMBER
) AS
BEGIN
    DELETE FROM Devoluciones WHERE id_devolucion = p_id_devolucion;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_GASTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_GASTO" (
    p_id_gasto IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."GASTOS"
    WHERE "ID_GASTO" = p_id_gasto;

    COMMIT;
END eliminar_gasto;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_HISTORIAL_PRECIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_HISTORIAL_PRECIO" (
    p_id_historial IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."HISTORIAL_PRECIOS"
    WHERE "ID_HISTORIAL" = p_id_historial;

    COMMIT;
END eliminar_historial_precio;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_HISTORIAL_STOCK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_HISTORIAL_STOCK" (
    p_id_historial IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."HISTORIAL_STOCK"
    WHERE "ID_HISTORIAL" = p_id_historial;

    COMMIT;
END eliminar_historial_stock;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_INVENTARIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_INVENTARIO" (
    p_id_inventario IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."INVENTARIO"
    WHERE "ID_INVENTARIO" = p_id_inventario;

    COMMIT;
END eliminar_inventario;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_LOG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_LOG" (
    p_id_log IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."LOGS"
    WHERE "ID_LOG" = p_id_log;

    COMMIT;
END eliminar_log;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_PAGO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_PAGO" (
    p_id_pago IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."PAGOS"
    WHERE "ID_PAGO" = p_id_pago;

    COMMIT;
END eliminar_pago;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_PRODUCTO" (p_id IN NUMBER) AS
BEGIN
    DELETE FROM Productos WHERE id_producto = p_id;
    IF SQL%ROWCOUNT = 0 THEN
        RAISE NO_DATA_FOUND;
    END IF;
    COMMIT;
END eliminar_producto;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_PROMOCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_PROMOCION" (
    p_id_promocion IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."PROMOCIONES"
    WHERE "ID_PROMOCION" = p_id_promocion;

    COMMIT;
END eliminar_promocion;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_PROVEEDOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_PROVEEDOR" (
    p_id_proveedor IN NUMBER
) AS
BEGIN
    DELETE FROM Proveedores WHERE id_proveedor = p_id_proveedor;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_REPORTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_REPORTE" (
    p_id_reporte IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."REPORTES"
    WHERE "ID_REPORTE" = p_id_reporte;

    COMMIT;
END eliminar_reporte;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_ROL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_ROL" (
    p_id_rol IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."ROLES"
    WHERE "ID_ROL" = p_id_rol;

    COMMIT;
END eliminar_rol;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_UNIDAD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_UNIDAD" (
    p_id_unidad IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."UNIDADES"
    WHERE "ID_UNIDAD" = p_id_unidad;

    COMMIT;
END eliminar_unidad;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_USUARIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_USUARIO" (
    p_id_usuario IN NUMBER
) AS
BEGIN
    DELETE FROM "USER_JAVA"."USUARIOS"
    WHERE "ID_USUARIO" = p_id_usuario;

    COMMIT;
END eliminar_usuario;

/
--------------------------------------------------------
--  DDL for Procedure ELIMINAR_VENTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."ELIMINAR_VENTA" (
    p_id_venta IN NUMBER
) AS
BEGIN
    DELETE FROM Ventas WHERE id_venta = p_id_venta;
    COMMIT;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_ALERTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_ALERTA" (
    id_c IN NUMBER
)
IS
    v_id_alerta  alertas.id_alerta%TYPE;
    v_tipo        alertas.tipo%TYPE;
    v_mensaje   alertas.mensaje%TYPE;
BEGIN
    SELECT id_alerta, tipo, mensaje
    INTO v_id_alerta, v_tipo, v_mensaje
    FROM alertas
    WHERE id_alerta = id_c;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró la alerta con ID ' || id_c);
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END obtener_alerta;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CALIDAD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_CALIDAD" (
    id_c IN NUMBER
)
IS
    v_id_calidad  calidad.id_calidad%TYPE;
    v_id_producto        calidad.id_producto%type;
    v_descripcion   calidad.descripcion%TYPE;
BEGIN
    SELECT id_calidad, id_producto, descripcion
    INTO v_id_calidad, v_id_producto, v_descripcion
    FROM calidad
    WHERE id_calidad = id_c;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró la categoría con ID ' || id_c);
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END obtener_calidad;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CATEGORIA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_CATEGORIA" (
    id_c IN NUMBER
)
IS
    v_id_categoria  categorias.id_categoria%TYPE;
    v_nombre        categorias.nombre%TYPE;
    v_descripcion   categorias.descripcion%TYPE;
BEGIN
    SELECT id_categoria, nombre, descripcion
    INTO v_id_categoria, v_nombre, v_descripcion
    FROM categorias
    WHERE id_categoria = id_c;

EXCEPTION
    WHEN NO_DATA_FOUND THEN
        DBMS_OUTPUT.PUT_LINE('No se encontró la categoría con ID ' || id_c);
    WHEN OTHERS THEN
        DBMS_OUTPUT.PUT_LINE('Error: ' || SQLERRM);
END obtener_categoria;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_CLIENTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_CLIENTE" (
    p_id_cliente IN NUMBER
) AS
BEGIN
    FOR rec IN (SELECT * FROM Clientes WHERE id_cliente = p_id_cliente) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || rec.id_cliente || ' - Nombre: ' || rec.nombre);
    END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_COMPRA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_COMPRA" (
    p_id_compra IN NUMBER
) AS
BEGIN
    FOR rec IN (SELECT * FROM Compras WHERE id_compra = p_id_compra) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || rec.id_compra || ' - Proveedor: ' || rec.id_proveedor || ' - Total: ' || rec.total);
    END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_DETALLE_COMPRA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_DETALLE_COMPRA" (
    p_id_detalle_compra IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * 
        FROM "USER_JAVA"."DETALLE_COMPRAS"
        WHERE "ID_DETALLE_COMPRA" = p_id_detalle_compra
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_DETALLE_COMPRA: ' || rec.ID_DETALLE_COMPRA || 
                             ', ID_COMPRA: ' || rec.ID_COMPRA || 
                             ', ID_PRODUCTO: ' || rec.ID_PRODUCTO || 
                             ', CANTIDAD: ' || rec.CANTIDAD || 
                             ', PRECIO_UNITARIO: ' || rec.PRECIO_UNITARIO);
    END LOOP;
END obtener_detalle_compra;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_DETALLE_VENTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_DETALLE_VENTA" (
    p_id_detalle_venta IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * 
        FROM "USER_JAVA"."DETALLE_VENTAS"
        WHERE "ID_DETALLE_VENTA" = p_id_detalle_venta
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_DETALLE_VENTA: ' || rec.ID_DETALLE_VENTA || 
                             ', ID_VENTA: ' || rec.ID_VENTA || 
                             ', ID_PRODUCTO: ' || rec.ID_PRODUCTO || 
                             ', CANTIDAD: ' || rec.CANTIDAD || 
                             ', PRECIO_UNITARIO: ' || rec.PRECIO_UNITARIO);
    END LOOP;
END obtener_detalle_venta;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_DEVOLUCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_DEVOLUCION" (
    p_id_devolucion IN NUMBER
) AS
BEGIN
    FOR rec IN (SELECT * FROM Devoluciones WHERE id_devolucion = p_id_devolucion) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || rec.id_devolucion || ' - Producto: ' || rec.id_producto || ' - Cliente: ' || rec.id_cliente || ' - Orden: ' || rec.id_orden);
    END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_GASTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_GASTO" (
    p_id_gasto IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * 
        FROM "USER_JAVA"."GASTOS"
        WHERE "ID_GASTO" = p_id_gasto
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_GASTO: ' || rec.ID_GASTO || 
                             ', DESCRIPCION: ' || rec.DESCRIPCION || 
                             ', MONTO: ' || rec.MONTO || 
                             ', FECHA: ' || rec.FECHA);
    END LOOP;
END obtener_gasto;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_HISTORIAL_PRECIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_HISTORIAL_PRECIO" (
    p_id_historial IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * 
        FROM "USER_JAVA"."HISTORIAL_PRECIOS"
        WHERE "ID_HISTORIAL" = p_id_historial
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_HISTORIAL: ' || rec.ID_HISTORIAL || 
                             ', ID_PRODUCTO: ' || rec.ID_PRODUCTO || 
                             ', PRECIO_ANTERIOR: ' || rec.PRECIO_ANTERIOR || 
                             ', PRECIO_NUEVO: ' || rec.PRECIO_NUEVO || 
                             ', FECHA_CAMBIO: ' || rec.FECHA_CAMBIO);
    END LOOP;
END obtener_historial_precio;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_HISTORIAL_STOCK
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_HISTORIAL_STOCK" (
    p_id_historial IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * 
        FROM "USER_JAVA"."HISTORIAL_STOCK"
        WHERE "ID_HISTORIAL" = p_id_historial
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_HISTORIAL: ' || rec.ID_HISTORIAL || 
                             ', ID_PRODUCTO: ' || rec.ID_PRODUCTO || 
                             ', CANTIDAD_ANTERIOR: ' || rec.CANTIDAD_ANTERIOR || 
                             ', CANTIDAD_NUEVA: ' || rec.CANTIDAD_NUEVA || 
                             ', FECHA_CAMBIO: ' || rec.FECHA_CAMBIO);
    END LOOP;
END obtener_historial_stock;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_INVENTARIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_INVENTARIO" (
    p_id_inventario IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * 
        FROM "USER_JAVA"."INVENTARIO"
        WHERE "ID_INVENTARIO" = p_id_inventario
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_INVENTARIO: ' || rec.ID_INVENTARIO || 
                             ', ID_PRODUCTO: ' || rec.ID_PRODUCTO || 
                             ', STOCK: ' || rec.STOCK);
    END LOOP;
END obtener_inventario;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_LOG
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_LOG" (
    p_id_log IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * 
        FROM "USER_JAVA"."LOGS"
        WHERE "ID_LOG" = p_id_log
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_LOG: ' || rec.ID_LOG || 
                             ', ID_USUARIO: ' || rec.ID_USUARIO || 
                             ', ACCION: ' || rec.ACCION || 
                             ', FECHA: ' || rec.FECHA);
    END LOOP;
END obtener_log;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_PAGO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_PAGO" (
    p_id_pago IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * 
        FROM "USER_JAVA"."PAGOS"
        WHERE "ID_PAGO" = p_id_pago
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_PAGO: ' || rec.ID_PAGO || 
                             ', ID_VENTA: ' || rec.ID_VENTA || 
                             ', METODO_PAGO: ' || rec.METODO_PAGO || 
                             ', MONTO: ' || rec.MONTO);
    END LOOP;
END obtener_pago;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_PRODUCTO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_PRODUCTO" (
    p_producto_id Productos.id_producto%TYPE,
    p_record OUT SYS_REFCURSOR
) AS
BEGIN
    OPEN p_record FOR
    SELECT * FROM Productos WHERE id_producto = p_producto_id;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_PROMOCION
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_PROMOCION" (
    p_id_promocion IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * 
        FROM "USER_JAVA"."PROMOCIONES"
        WHERE "ID_PROMOCION" = p_id_promocion
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_PROMOCION: ' || rec.ID_PROMOCION || 
                             ', ID_PRODUCTO: ' || rec.ID_PRODUCTO || 
                             ', DESCUENTO: ' || rec.DESCUENTO || 
                             ', FECHA_INICIO: ' || rec.FECHA_INICIO || 
                             ', FECHA_FIN: ' || rec.FECHA_FIN);
    END LOOP;
END obtener_promocion;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_PROVEEDOR
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_PROVEEDOR" (
    p_id_proveedor IN NUMBER
) AS
BEGIN
    FOR rec IN (SELECT * FROM Proveedores WHERE id_proveedor = p_id_proveedor) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || rec.id_proveedor || ' - Nombre: ' || rec.nombre);
    END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_REPORTE
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_REPORTE" (
    p_id_reporte IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * FROM "USER_JAVA"."REPORTES"
        WHERE "ID_REPORTE" = p_id_reporte
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_REPORTE: ' || rec.ID_REPORTE ||
                             ', TIPO: ' || rec.TIPO ||
                             ', FECHA_GENERADO: ' || rec.FECHA_GENERADO ||
                             ', DESCRIPCION: ' || rec.DESCRIPCION);
    END LOOP;
END obtener_reporte;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_ROL
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_ROL" (
    p_id_rol IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * FROM "USER_JAVA"."ROLES"
        WHERE "ID_ROL" = p_id_rol
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_ROL: ' || rec.ID_ROL || ', NOMBRE: ' || rec.NOMBRE);
    END LOOP;
END obtener_rol;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_UNIDAD
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_UNIDAD" (
    p_id_unidad IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * FROM "USER_JAVA"."UNIDADES"
        WHERE "ID_UNIDAD" = p_id_unidad
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_UNIDAD: ' || rec.ID_UNIDAD || ', NOMBRE: ' || rec.NOMBRE);
    END LOOP;
END obtener_unidad;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_USUARIO
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_USUARIO" (
    p_id_usuario IN NUMBER
) AS
BEGIN
    FOR rec IN (
        SELECT * FROM "USER_JAVA"."USUARIOS"
        WHERE "ID_USUARIO" = p_id_usuario
    ) LOOP
        DBMS_OUTPUT.PUT_LINE('ID_USUARIO: ' || rec.ID_USUARIO || 
                             ', NOMBRE: ' || rec.NOMBRE || 
                             ', CORREO: ' || rec.CORREO || 
                             ', ID_ROL: ' || rec.ID_ROL);
    END LOOP;
END obtener_usuario;

/
--------------------------------------------------------
--  DDL for Procedure OBTENER_VENTA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."OBTENER_VENTA" (
    p_id_venta IN NUMBER
) AS
BEGIN
    FOR rec IN (SELECT * FROM Ventas WHERE id_venta = p_id_venta) LOOP
        DBMS_OUTPUT.PUT_LINE('ID: ' || rec.id_venta || ' - Cliente: ' || rec.id_cliente || ' - Total: ' || rec.total);
    END LOOP;
END;

/
--------------------------------------------------------
--  DDL for Procedure SP_INSERTAR_DETALLE_COMPRA
--------------------------------------------------------
set define off;

  CREATE OR REPLACE NONEDITIONABLE PROCEDURE "USER_JAVA"."SP_INSERTAR_DETALLE_COMPRA" (
    p_id_compra IN NUMBER,
    p_id_producto IN NUMBER,
    p_cantidad IN NUMBER,
    p_precio_unitario IN NUMBER
) AS
BEGIN
    INSERT INTO "USER_JAVA"."DETALLE_COMPRAS" 
    ("ID_COMPRA", "ID_PRODUCTO", "CANTIDAD", "PRECIO_UNITARIO")
    VALUES (p_id_compra, p_id_producto, p_cantidad, p_precio_unitario);

    COMMIT;
END sp_insertar_detalle_compra;

/
