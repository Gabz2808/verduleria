-- Eliminar tablas si existen
BEGIN
    FOR t IN (SELECT table_name FROM user_tables) LOOP
        EXECUTE IMMEDIATE 'DROP TABLE ' || t.table_name || ' CASCADE CONSTRAINTS';
    END LOOP;
END;
/

-- Tabla de Categorías
CREATE TABLE Categorias (
    id_categoria NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    descripcion VARCHAR2(255)
);

-- Tabla de Unidades de Medida
CREATE TABLE Unidades_Medida (
    id_unidad NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(50) NOT NULL,
    abreviatura VARCHAR2(10) NOT NULL
);

-- Tabla de Productos
CREATE TABLE Productos (
    id_producto NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    id_categoria NUMBER NOT NULL,
    id_unidad NUMBER NOT NULL,
    CONSTRAINT fk_productos_categoria FOREIGN KEY (id_categoria) REFERENCES Categorias(id_categoria),
    CONSTRAINT fk_productos_unidad FOREIGN KEY (id_unidad) REFERENCES Unidades_Medida(id_unidad)
);

-- Tabla de Ubicaciones en Inventario
CREATE TABLE Ubicacion_Productos (
    id_ubicacion NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL,
    descripcion VARCHAR2(255)
);

-- Tabla de Inventario
CREATE TABLE Inventario (
    id_inventario NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_producto NUMBER NOT NULL,
    stock NUMBER NOT NULL CHECK (stock >= 0),
    id_ubicacion NUMBER NOT NULL,
    CONSTRAINT fk_inventario_producto FOREIGN KEY (id_producto) REFERENCES Productos(id_producto),
    CONSTRAINT fk_inventario_ubicacion FOREIGN KEY (id_ubicacion) REFERENCES Ubicacion_Productos(id_ubicacion)
);

-- Tabla de Zonas de Recepción
CREATE TABLE Zonas_Recepcion (
    id_zona NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(100) NOT NULL
);

-- Tabla de Lotes
CREATE TABLE Lotes (
    id_lote NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_producto NUMBER NOT NULL,
    fecha_entrada DATE DEFAULT SYSDATE NOT NULL,
    cantidad NUMBER NOT NULL CHECK (cantidad > 0),
    id_zona NUMBER NOT NULL,
    CONSTRAINT fk_lotes_producto FOREIGN KEY (id_producto) REFERENCES Productos(id_producto),
    CONSTRAINT fk_lotes_zona FOREIGN KEY (id_zona) REFERENCES Zonas_Recepcion(id_zona)
);


-- Tabla de Vida Útil (Ahora relacionada con Lotes)
CREATE TABLE Vida_Util (
    id_vida NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_lote NUMBER NOT NULL,
    dias NUMBER NOT NULL CHECK (dias > 0),
    CONSTRAINT fk_vida_lote FOREIGN KEY (id_lote) REFERENCES Lotes(id_lote)
);

-- Tabla de Calidad (Relacionada con Lotes)
CREATE TABLE Calidad (
    id_calidad NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_lote NUMBER NOT NULL,
    descripcion VARCHAR2(255) NOT NULL,
    CONSTRAINT fk_calidad_lote FOREIGN KEY (id_lote) REFERENCES Lotes(id_lote)
);

-- Tabla de Proveedores
CREATE TABLE Proveedores (
    id_proveedor NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(150) NOT NULL,
    contacto VARCHAR2(100),
    direccion VARCHAR2(255)
);

-- Tabla de Ordenes de Compra
CREATE TABLE Ordenes_Compra (
    id_orden NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_proveedor NUMBER NOT NULL,
    fecha DATE DEFAULT SYSDATE NOT NULL,
    estado VARCHAR2(50) NOT NULL,
    CONSTRAINT fk_ordenes_proveedor FOREIGN KEY (id_proveedor) REFERENCES Proveedores(id_proveedor)
);

-- Tabla de Detalles de Compra
CREATE TABLE Detalles_Compra (
    id_detalle NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_orden NUMBER NOT NULL,
    id_producto NUMBER NOT NULL,
    cantidad NUMBER NOT NULL CHECK (cantidad > 0),
    precio_unitario DECIMAL(10,2) NOT NULL,
    CONSTRAINT fk_detalle_orden FOREIGN KEY (id_orden) REFERENCES Ordenes_Compra(id_orden),
    CONSTRAINT fk_detalle_producto FOREIGN KEY (id_producto) REFERENCES Productos(id_producto)
);

-- Tabla de Clientes (Nueva para registrar devoluciones de clientes)
CREATE TABLE Clientes (
    id_cliente NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    nombre VARCHAR2(150) NOT NULL,
    contacto VARCHAR2(100),
    direccion VARCHAR2(255)
);

-- Tabla de Devoluciones (Relacionada con Clientes y Ordenes de Compra)
CREATE TABLE Devoluciones (
    id_devolucion NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_producto NUMBER NOT NULL,
    id_orden NUMBER,
    id_cliente NUMBER,
    motivo VARCHAR2(255) NOT NULL,
    cantidad NUMBER NOT NULL CHECK (cantidad > 0),
    CONSTRAINT fk_devoluciones_producto FOREIGN KEY (id_producto) REFERENCES Productos(id_producto),
    CONSTRAINT fk_devoluciones_orden FOREIGN KEY (id_orden) REFERENCES Ordenes_Compra(id_orden),
    CONSTRAINT fk_devoluciones_cliente FOREIGN KEY (id_cliente) REFERENCES Clientes(id_cliente)
);

-- Tabla de Movimientos de Inventario (Nueva para registrar ingresos y salidas)
CREATE TABLE Movimientos_Inventario (
    id_movimiento NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    id_producto NUMBER NOT NULL,
    fecha DATE DEFAULT SYSDATE NOT NULL,
    tipo_movimiento VARCHAR2(50) NOT NULL CHECK (tipo_movimiento IN ('Entrada', 'Salida')),
    cantidad NUMBER NOT NULL CHECK (cantidad > 0),
    CONSTRAINT fk_movimiento_producto FOREIGN KEY (id_producto) REFERENCES Productos(id_producto)
);
